webdriver {
  driver = chrome
}
//headless.mode = false

#
#disable the message of "chrome is being controlled by automated software" appearing when chromeDriver starts.
#
//use.chrome.automation.options = false
//chrome_experimental_options {
//  excludeSwitches = "[enable-automation]"
//  useAutomationExtension = false
//}

#
# General capabilities
#
chrome {
  capabilities {
    acceptSslCerts = true
    handlesAlerts = true
  }
}


#
# Chrome options can be defined using the chrome.switches property
#
chrome.switches = """--no-sandbox;--disable-dev-shm-usage;--start-maximized;--args -disable-extensions;--test-type;--ignore-certificate-errors;
                   --disable-popup-blocking;--disable-default-apps;--disable-extensions-file-access-check;-disable-infobars,--disable-gpu"""

#
# Define drivers for different platforms. Serenity will automatically pick the correct driver for the current platform
#
drivers {
  windows {
    webdriver.chrome.driver = "src/test/resources/drivers/chromedriver.exe"
    webdriver.gecko.driver = "src/test/resources/drivers/geckodriver.exe"
    webdriver.ie.driver = "src/test/resources/drivers/IEDriverServer.exe"
    webdriver.edge.driver = "src/test/resources/drivers/MicrosoftWebDriver.exe"
  }
  mac {
    #webdriver.chrome.driver = "src/test/resources/drivers/chromedriver"
    #webdriver.gecko.driver = "src/test/resources/drivers/geckodriver"
  }
  linux {
    #webdriver.chrome.driver = "src/test/resources/drivers/chromedriver"
    #webdriver.gecko.driver = "src/test/resources/drivers/geckodriver"
  }
}

#
# This section defines environment-specific configuration for different environments.
# You can define normal Serenity properties, such as webdriver.base.url, or custom ones
#

environments {
  environments_1{
    webdriver.base.url = "http://10.26.9.74:8080/usoserver/"
    username = "conuser02"
    password = "password1"
  }
}